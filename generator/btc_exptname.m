function exptname=btc_exptname(letcodes,dict)
% exptname=btc_exptname(letcodes,dict) sorts the letter codes into a standard
% order (fourth, third, second, first)
%
%  letcodes:  a 1-d array of characters, e.g., char(fieldnames(letcode))'
% dict:  dictionary of binary correlation names, generated by btc_define;
%    btc_define called if this field is empty
%
%  exptname:  a 1-d array of same length, with letter codes in standard order
%
%    See also: BTC_DEFINE, BTC_TEST.
%
if (nargin<2)
    dict=btc_define;
end
lc=unique(letcodes);
switch length(lc)
    case 1
        exptname=lc;
    case 2
        ord1=dict.order(find(lc(1)==dict.codel));
        ord2=dict.order(find(lc(2)==dict.codel));
        if ord1<ord2
            exptname=flipud(fliplr(lc)); %faster than figuring out how to reverse the order if row or col vec
        else
            exptname=lc;
        end
    otherwise
        exptname=[];
        for q=1:max(dict.order)
            exptname=[sort(intersect(dict.codel(find(dict.order==q)),letcodes)),exptname];
        end
end
return
