function [configs,configs_list,mtx]=flfs_enumerate(flfs,opts)
% [configs,configs_list,mtx]=flfs_enumerate(flfs,opts) enumerates all configurations
% associated with a falling-leaves/sticks setup defined by flfs
%
% Does not take into account that the order does not matter between disjoint falling leaves.
%
% flfs: structure defining falling-leaves/sticks categories and subcategories, returned by flfs_define
% opts: opts.iflog=1 to log
%
% configs: a structure array of all configurations that can be generated by the falling leaves
%    configs(i).sequence is the reduced numerical sequence
%    configs(i).sequence_char sequence as characters a, b, c, ..
%    configs(i).parents(:,nsubcats) is the numerical sequences of all permutations that map to sequence
%        sequence_char sequence as characters a, b, c, ..
%    configs(i).uncovered_cells,covered_cells,region_covered:  corresponding arguments from flfs_seqreduce
%
% configs_list: a cell array of the reduced character sequences
% mtx:  a matrix of size [length(configs_list),factorial(nsubcats)], with
%    1's if a sequence of leaves given by the column permutation results in a given row configuration
%
% See also:  MTC_DEFINE, FLFS_SEQREDUCE, FLFS_DEFINE, FLFS_ENUMERATE_DEMO.
%
if (nargin<=1)
    opts=[];
end
opts=filldefault(opts,'iflog',0);
configs=struct();
configs_list=[];
nsubcats=length(flfs.subcats);
%
unreduced=sortrows(perms(1:nsubcats)); %results will tend to start from a rather than z
mtx=[];
for k=1:size(unreduced,1)
    [reduced,uncovered_cells,covered_cells,region_covered]=flfs_seqreduce(unreduced(k,:),flfs);
    q=reduced;
    qstring=char(double('a')-1+q);
    ipos=strmatch(qstring,configs_list,'exact');
    if isempty(ipos)
        ipos=length(configs_list)+1;
        configs(ipos).sequence=q;
        configs(ipos).sequence_char=qstring;
        configs(ipos).parents=[];
        configs(ipos).uncovered_cells=uncovered_cells;
        configs(ipos).covered_cells=covered_cells;
        configs(ipos).region_covered=region_covered;
        configs_list{ipos}=qstring;
    end
    ipos=min(ipos);
    configs(ipos).parents=[configs(ipos).parents;unreduced(k,:)];
    if ~strcmp(configs(ipos).covered_cells,covered_cells)
        warning('flfs_enumerate: mismatch of covered cells')
        disp('existing configs')
        disp(configs(ipos))
        disp('parents')
        disp(configs(ipos).parents)
        disp('new unreduced:')
        disp(unreduced(k,:));
        disp('new covered cells')
        disp(covered_cells)
    end
    mtx(ipos,k)=1;
end
if (opts.iflog)
    disp(sprintf('flfs has %2.0f categories and %2.0f subcategories. Sequences considered: %10.0f; reduced sequences produced: %10.0f.',...
        length(flfs.cats),length(flfs.subcats),size(unreduced,1),length(configs_list)));
end
return
